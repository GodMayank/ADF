{
	"name": "Mutual_Fund",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Canara",
						"type": "DatasetReference"
					},
					"name": "Canara"
				},
				{
					"dataset": {
						"referenceName": "ICICI",
						"type": "DatasetReference"
					},
					"name": "ICICI"
				},
				{
					"dataset": {
						"referenceName": "Axis",
						"type": "DatasetReference"
					},
					"name": "Axis"
				},
				{
					"dataset": {
						"referenceName": "Kotak",
						"type": "DatasetReference"
					},
					"name": "kotak"
				},
				{
					"dataset": {
						"referenceName": "Quant",
						"type": "DatasetReference"
					},
					"name": "Quant"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MutualFund",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "MutualFund",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "MutualFund",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "MutualFund",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "MutualFund",
						"type": "DatasetReference"
					},
					"name": "sink5"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "cast1"
				},
				{
					"name": "cast2"
				},
				{
					"name": "cast3"
				},
				{
					"name": "cast4"
				},
				{
					"name": "cast5"
				}
			],
			"scriptLines": [
				"source(output(",
				"          date as string,",
				"          NAV as string,",
				"          amount_till_date as string,",
				"          unit_till_date as string,",
				"          current_nav as string,",
				"          gain as string,",
				"          gain_percent as string,",
				"          net_amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Canara",
				"source(output(",
				"          date as string,",
				"          NAV as string,",
				"          amount_till_date as string,",
				"          unit_till_date as string,",
				"          current_nav as string,",
				"          gain as string,",
				"          gain_percent as string,",
				"          net_amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ICICI",
				"source(output(",
				"          date as string,",
				"          NAV as string,",
				"          amount_till_date as string,",
				"          unit_till_date as string,",
				"          current_nav as string,",
				"          gain as string,",
				"          gain_percent as string,",
				"          net_amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Axis",
				"source(output(",
				"          date as string,",
				"          NAV as string,",
				"          amount_till_date as string,",
				"          unit_till_date as string,",
				"          current_nav as string,",
				"          gain as string,",
				"          gain_percent as string,",
				"          net_amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> kotak",
				"source(output(",
				"          date as string,",
				"          NAV as string,",
				"          amount_till_date as string,",
				"          unit_till_date as string,",
				"          current_nav as string,",
				"          gain as string,",
				"          gain_percent as string,",
				"          net_amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Quant",
				"Canara derive(FundHouse = 'Canara-Robeco-Small-Cap-Fund-Direct-Growth') ~> derivedColumn1",
				"ICICI derive(FundHouse = 'ICICI-Prudential-Technology-Direct-Plan-Growth') ~> derivedColumn2",
				"Axis derive(FundHouse = 'Axis-Long-Term-Equity-Direct-Plan-Growth') ~> derivedColumn3",
				"kotak derive(FundHouse = 'Kotak-Bluechip-Fund-Direct-Growth') ~> derivedColumn4",
				"Quant derive(FundHouse = 'Quant-Active-Fund-Growth-Option-Direct-Plan') ~> derivedColumn5",
				"derivedColumn3 cast(output(",
				"          date as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast1",
				"derivedColumn1 cast(output(",
				"          date as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast2",
				"derivedColumn2 cast(output(",
				"          date as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast3",
				"derivedColumn4 cast(output(",
				"          date as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast4",
				"derivedColumn5 cast(output(",
				"          date as date 'yyyy-MM-dd'",
				"     ),",
				"     errors: true) ~> cast5",
				"cast2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"cast3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"cast4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"cast5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5"
			]
		}
	}
}